// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provisioning

import (
	"github.com/google/wire"
	"github.com/wbreza/wire-sample/pkg/config"
	"github.com/wbreza/wire-sample/pkg/exec"
	"github.com/wbreza/wire-sample/pkg/tools"
	"github.com/wbreza/wire-sample/pkg/tools/az"
)

// Injectors from wire.go:

func InjectManager(providerName string, args ...any) (*Manager, error) {
	configConfig, err := config.Load()
	if err != nil {
		return nil, err
	}
	provider, err := NewProvider(configConfig, providerName, args...)
	if err != nil {
		return nil, err
	}
	commandRunner := exec.NewShellCommandRunner()
	userAgent, err := tools.InjectUserAgent()
	if err != nil {
		return nil, err
	}
	cli := az.NewCli(commandRunner, userAgent)
	manager := NewManager(provider, cli)
	return manager, nil
}

// wire.go:

var ProviderSet = wire.NewSet(config.ProviderSet, az.ProviderSet, NewProvider,
	NewManager,
)

func Register(providerName string, registrationFunc RegistrationFunc) {
	providers[providerName] = registrationFunc
}

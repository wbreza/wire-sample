// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package tools

import (
	"github.com/google/wire"
	"github.com/wbreza/wire-sample/pkg/config"
	"github.com/wbreza/wire-sample/pkg/exec"
)

// Injectors from wire.go:

func injectTemplateName() (string, error) {
	configConfig, err := config.InjectConfig()
	if err != nil {
		return "", err
	}
	string2 := configConfig.Name
	return string2, nil
}

func injectVersion() *Version {
	version := _wireVersionValue
	return version
}

var (
	_wireVersionValue = &Version{
		Major: 1,
		Minor: 0,
		Patch: 0,
	}
)

func InjectUserAgent() (*UserAgent, error) {
	string2, err := injectTemplateName()
	if err != nil {
		return nil, err
	}
	version := injectVersion()
	userAgent := &UserAgent{
		Template: string2,
		Version:  version,
	}
	return userAgent, nil
}

// wire.go:

var ProviderSet = wire.NewSet(exec.NewShellCommandRunner, InjectUserAgent)
